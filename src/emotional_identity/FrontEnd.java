
package emotional_identity;
import java.awt.Color;
import java.util.*;

/**
 *
 * @author Treagle350
 */
public class FrontEnd extends javax.swing.JFrame {

    /**
     * Creates new form FrontEnd
     */
    int [] emotionalSpectrum = new int[8];
    int [] temp = new int[8];
    int currentPage;
    int creditScore;
    
    Color nonSelectedColor = new Color(240,240,240);
    Color selectedColor = new Color(133,211,165);
    Color superSelectedColor = new Color(93,147,115);
    Color oppositeSelectedColor = new Color(206,139,125);
    Color superOppositeSelectedColor = new Color(147,102,93);
    
    boolean loveFlag, submissionFlag, aweFlag, disapprovalFlag, remorseFlag, contemptFlag, aggressionFlag, optimismFlag;
    
    String problem;
    List<String> answers;
    
    boolean superCheck;
    
    QuizCases quiz;
    
    public FrontEnd() {
        initComponents();
        
        currentPage = 1;
        
        quiz = new QuizCases();
        updateQuiz();
        End.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Top = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        problemString = new javax.swing.JLabel();
        End = new javax.swing.JPanel();
        results = new javax.swing.JLabel();
        results1 = new javax.swing.JLabel();
        results2 = new javax.swing.JLabel();
        Middle = new javax.swing.JPanel();
        loveAnswer = new javax.swing.JButton();
        aggressionAnswer = new javax.swing.JButton();
        remorseAnswer = new javax.swing.JButton();
        aweAnswer = new javax.swing.JButton();
        submissionAnswer = new javax.swing.JButton();
        optimismAnswer = new javax.swing.JButton();
        contemptAnswer = new javax.swing.JButton();
        disapprovalAnswer = new javax.swing.JButton();
        Bottom = new javax.swing.JPanel();
        nextButton = new javax.swing.JButton();
        pageNumber = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        resetButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(200, 200, 200));
        jPanel1.setForeground(new java.awt.Color(60, 60, 60));

        Top.setBackground(new java.awt.Color(126, 147, 118));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Problem :");

        jPanel4.setBackground(new java.awt.Color(126, 137, 108));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 13, Short.MAX_VALUE)
        );

        problemString.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        problemString.setForeground(new java.awt.Color(250, 250, 250));
        problemString.setText("Dummy-text");

        javax.swing.GroupLayout TopLayout = new javax.swing.GroupLayout(Top);
        Top.setLayout(TopLayout);
        TopLayout.setHorizontalGroup(
            TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TopLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(problemString)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        TopLayout.setVerticalGroup(
            TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TopLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(problemString))
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );

        End.setBackground(new java.awt.Color(100, 100, 100));
        End.setForeground(new java.awt.Color(160, 160, 160));

        results.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        results.setForeground(new java.awt.Color(255, 255, 255));
        results.setText("Wuub wuub test text");

        results1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        results1.setForeground(new java.awt.Color(255, 255, 255));
        results1.setText("Wuub wuub test text");

        results2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        results2.setForeground(new java.awt.Color(255, 255, 255));
        results2.setText("Wuub wuub test text");

        javax.swing.GroupLayout EndLayout = new javax.swing.GroupLayout(End);
        End.setLayout(EndLayout);
        EndLayout.setHorizontalGroup(
            EndLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EndLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(EndLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(results1, javax.swing.GroupLayout.DEFAULT_SIZE, 1131, Short.MAX_VALUE)
                    .addComponent(results, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(results2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(295, Short.MAX_VALUE))
        );
        EndLayout.setVerticalGroup(
            EndLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EndLayout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(results, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(results1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(results2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        Middle.setBackground(new java.awt.Color(190, 190, 190));
        Middle.setPreferredSize(new java.awt.Dimension(250, 250));

        loveAnswer.setText("jButton1");
        loveAnswer.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        loveAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loveAnswerActionPerformed(evt);
            }
        });

        aggressionAnswer.setText("jButton1");
        aggressionAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aggressionAnswerActionPerformed(evt);
            }
        });

        remorseAnswer.setText("jButton1");
        remorseAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remorseAnswerActionPerformed(evt);
            }
        });

        aweAnswer.setText("jButton1");
        aweAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aweAnswerActionPerformed(evt);
            }
        });

        submissionAnswer.setText("jButton1");
        submissionAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submissionAnswerActionPerformed(evt);
            }
        });

        optimismAnswer.setText("jButton1");
        optimismAnswer.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        optimismAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optimismAnswerActionPerformed(evt);
            }
        });

        contemptAnswer.setText("jButton1");
        contemptAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contemptAnswerActionPerformed(evt);
            }
        });

        disapprovalAnswer.setText("jButton1");
        disapprovalAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disapprovalAnswerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MiddleLayout = new javax.swing.GroupLayout(Middle);
        Middle.setLayout(MiddleLayout);
        MiddleLayout.setHorizontalGroup(
            MiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MiddleLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(MiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(optimismAnswer)
                    .addComponent(contemptAnswer))
                .addGap(56, 56, 56)
                .addGroup(MiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(remorseAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)
                    .addComponent(loveAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(41, 41, 41)
                .addGroup(MiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(disapprovalAnswer)
                    .addComponent(submissionAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, 577, Short.MAX_VALUE))
                .addGap(78, 78, 78))
            .addGroup(MiddleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(aggressionAnswer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(aweAnswer)
                .addContainerGap())
        );
        MiddleLayout.setVerticalGroup(
            MiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MiddleLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(MiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submissionAnswer)
                    .addComponent(optimismAnswer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(MiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aweAnswer)
                    .addComponent(aggressionAnswer))
                .addGap(65, 65, 65)
                .addGroup(MiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(disapprovalAnswer)
                    .addComponent(contemptAnswer))
                .addGap(118, 118, 118))
            .addGroup(MiddleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loveAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(235, 235, 235)
                .addComponent(remorseAnswer)
                .addGap(58, 58, 58))
        );

        Bottom.setBackground(new java.awt.Color(126, 147, 118));

        nextButton.setBackground(new java.awt.Color(130, 200, 200));
        nextButton.setText("Next");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        pageNumber.setText("Page");

        jPanel5.setBackground(new java.awt.Color(126, 137, 108));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        resetButton.setBackground(new java.awt.Color(130, 200, 200));
        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BottomLayout = new javax.swing.GroupLayout(Bottom);
        Bottom.setLayout(BottomLayout);
        BottomLayout.setHorizontalGroup(
            BottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(BottomLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(pageNumber)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(resetButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nextButton)
                .addContainerGap())
        );
        BottomLayout.setVerticalGroup(
            BottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BottomLayout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(BottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pageNumber)
                    .addComponent(nextButton)
                    .addComponent(resetButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Top, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Bottom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Middle, javax.swing.GroupLayout.DEFAULT_SIZE, 1472, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(End, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(Top, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(Middle, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Bottom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(59, 59, 59)
                    .addComponent(End, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(63, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 415, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        if(superCheck & creditScore == 0){
            if(currentPage == quiz.getQuizSize()){
                for(int i=0;i<8;i++){
                    emotionalSpectrum[i] = emotionalSpectrum[i] + temp[i];
                    temp[i] = 0;
                }
                endResultScreen();
            }else{
                currentPage = currentPage + 1;
                //Update the emotionalSpectrum array
                for(int i=0;i<8;i++){
                    emotionalSpectrum[i] = emotionalSpectrum[i] + temp[i];
                    temp[i] = 0;
                    
                updateQuiz();
                }
            }
        }
    }//GEN-LAST:event_nextButtonActionPerformed

    private void endResultScreen(){
        problemString.setText("End results");
        Middle.setVisible(false);
        End.setVisible(true);
        int max;
        int index;
        
        max = 0;
        index = 0;
        for (int count = 0; count < emotionalSpectrum.length; count++) {
            if (emotionalSpectrum[count] > max) {
                index = count;
                max = emotionalSpectrum[count];
            }
        }
        results.setText(quiz.getResults(index).get(0));
        results1.setText(quiz.getResults(index).get(1));
        results2.setText(quiz.getResults(index).get(2));
        
        for(int i=0;i<8;i++){
                    emotionalSpectrum[i] = 0;
                    temp[i] = 0;
        }
    }
    
    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        resetQuiz();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void disapprovalAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disapprovalAnswerActionPerformed
        int indexButton = 3;
        if(creditScore > 0){
            disapprovalFlag = !disapprovalFlag;
            if(disapprovalFlag){
                disapprovalAnswer.setBackground(selectedColor);
                optimismAnswer.setBackground(oppositeSelectedColor);
                temp[indexButton] = 1;
                creditScore = creditScore - 1;
            }else if(!disapprovalFlag){
                disapprovalAnswer.setBackground(nonSelectedColor);
                optimismAnswer.setBackground(nonSelectedColor);
                temp[indexButton] = 0;
                creditScore = creditScore + 1;
            }
            buttonToggler(indexButton, disapprovalFlag);
            superCheck();
        }
    }//GEN-LAST:event_disapprovalAnswerActionPerformed

    private void contemptAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contemptAnswerActionPerformed
        int indexButton = 5;
        if(creditScore > 0){
            contemptFlag = !contemptFlag;
            if(contemptFlag){
                contemptAnswer.setBackground(selectedColor);
                submissionAnswer.setBackground(oppositeSelectedColor);
                temp[indexButton] = 1;
                creditScore = creditScore - 1;
            }else if(!contemptFlag){
                contemptAnswer.setBackground(nonSelectedColor);
                submissionAnswer.setBackground(nonSelectedColor);
                temp[indexButton] = 0;
                creditScore = creditScore + 1;
            }
            buttonToggler(indexButton, contemptFlag);
            superCheck();
        }
    }//GEN-LAST:event_contemptAnswerActionPerformed

    private void optimismAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optimismAnswerActionPerformed
        int indexButton = 7;
        if(creditScore > 0){
            optimismFlag = !optimismFlag;
            if(optimismFlag){
                optimismAnswer.setBackground(selectedColor);
                disapprovalAnswer.setBackground(oppositeSelectedColor);
                temp[indexButton] = 1;
                creditScore = creditScore - 1;
            }else if(!optimismFlag){
                optimismAnswer.setBackground(nonSelectedColor);
                disapprovalAnswer.setBackground(nonSelectedColor);
                temp[indexButton] = 0;
                creditScore = creditScore + 1;
            }
            buttonToggler(indexButton, optimismFlag);
            superCheck();
        }
    }//GEN-LAST:event_optimismAnswerActionPerformed

    private void submissionAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submissionAnswerActionPerformed
        int indexButton = 1;
        if(creditScore > 0){
            submissionFlag = !submissionFlag;
            if(submissionFlag){
                submissionAnswer.setBackground(selectedColor);
                contemptAnswer.setBackground(oppositeSelectedColor);
                temp[indexButton] = 1;
                creditScore = creditScore - 1;
            }else if(!submissionFlag){
                submissionAnswer.setBackground(nonSelectedColor);
                contemptAnswer.setBackground(nonSelectedColor);
                temp[indexButton] = 0;
                creditScore = creditScore + 1;
            }
            buttonToggler(indexButton, submissionFlag);
            superCheck();
        }
    }//GEN-LAST:event_submissionAnswerActionPerformed

    private void aweAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aweAnswerActionPerformed
        int indexButton = 2;
        if(creditScore > 0){
            aweFlag = !aweFlag;
            if(aweFlag){
                aweAnswer.setBackground(selectedColor);
                aggressionAnswer.setBackground(oppositeSelectedColor);
                temp[indexButton] = 1;
                creditScore = creditScore - 1;
            }else if(!aweFlag){
                aweAnswer.setBackground(nonSelectedColor);
                aggressionAnswer.setBackground(nonSelectedColor);
                temp[indexButton] = 0;
                creditScore = creditScore + 1;
            }
            buttonToggler(indexButton, aweFlag);
            superCheck();
        }
    }//GEN-LAST:event_aweAnswerActionPerformed

    private void remorseAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remorseAnswerActionPerformed
        int indexButton = 4;
        if(creditScore > 0){
            remorseFlag = !remorseFlag;
            if(remorseFlag){
                remorseAnswer.setBackground(selectedColor);
                loveAnswer.setBackground(oppositeSelectedColor);
                temp[indexButton] = 1;
                creditScore = creditScore - 1;
            }else if(!remorseFlag){
                remorseAnswer.setBackground(nonSelectedColor);
                loveAnswer.setBackground(nonSelectedColor);
                temp[indexButton] = 0;
                creditScore = creditScore + 1;
            }
            buttonToggler(indexButton, remorseFlag);
            superCheck();
        }
    }//GEN-LAST:event_remorseAnswerActionPerformed

    private void aggressionAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aggressionAnswerActionPerformed
        int indexButton = 6;
        if(creditScore > 0){
            aggressionFlag = !aggressionFlag;
            if(aggressionFlag){
                aggressionAnswer.setBackground(selectedColor);
                aweAnswer.setBackground(oppositeSelectedColor);
                temp[indexButton] = 1;
                creditScore = creditScore - 1;
            }else if(!aggressionFlag){
                aggressionAnswer.setBackground(nonSelectedColor);
                aweAnswer.setBackground(nonSelectedColor);
                temp[indexButton] = 0;
                creditScore = creditScore + 1;
            }
            buttonToggler(indexButton, aggressionFlag);
            superCheck();
        }
    }//GEN-LAST:event_aggressionAnswerActionPerformed

    private void loveAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loveAnswerActionPerformed
        int indexButton = 0;
        if(creditScore > 0){
            loveFlag = !loveFlag;
            if(loveFlag){
                loveAnswer.setBackground(selectedColor);
                remorseAnswer.setBackground(oppositeSelectedColor);
                temp[indexButton] = 1;
                creditScore = creditScore - 1;
            }else if(!loveFlag){
                loveAnswer.setBackground(nonSelectedColor);
                remorseAnswer.setBackground(nonSelectedColor);
                temp[indexButton] = 0;
                creditScore = creditScore + 1;
            }
            buttonToggler(indexButton, loveFlag);
            superCheck();
        }
    }//GEN-LAST:event_loveAnswerActionPerformed
 
    private void superCheck(){
        if(optimismFlag & submissionFlag){
            loveAnswer.setBackground(superSelectedColor);
            remorseAnswer.setBackground(superOppositeSelectedColor);
            resetButton.setVisible(true);
            superCheck = true;
            temp[0] = temp[0] + 1;
        }
        if(aweFlag & loveFlag){
            submissionAnswer.setBackground(superSelectedColor);
            contemptAnswer.setBackground(superOppositeSelectedColor);
            resetButton.setVisible(true);
            superCheck = true;
            temp[1] = temp[1] + 1;
        }
        if(disapprovalFlag & submissionFlag){
            aweAnswer.setBackground(superSelectedColor);
            aggressionAnswer.setBackground(superOppositeSelectedColor);
            resetButton.setVisible(true);
            superCheck = true;
            temp[2] = temp[2] + 1;
        }
        if(remorseFlag & aweFlag){
            disapprovalAnswer.setBackground(superSelectedColor);
            optimismAnswer.setBackground(superOppositeSelectedColor);
            resetButton.setVisible(true);
            superCheck = true;
            temp[3] = temp[3] + 1;
        }
        if(contemptFlag & disapprovalFlag){
            remorseAnswer.setBackground(superSelectedColor);
            loveAnswer.setBackground(superOppositeSelectedColor);
            resetButton.setVisible(true);
            superCheck = true;
            temp[4] = temp[4] + 1;
        }
        if(aggressionFlag & remorseFlag){
            contemptAnswer.setBackground(superSelectedColor);
            submissionAnswer.setBackground(superOppositeSelectedColor);
            resetButton.setVisible(true);
            superCheck = true;
            temp[5] = temp[5] + 1;
        }
        if(optimismFlag & contemptFlag){
            aggressionAnswer.setBackground(superSelectedColor);
            aweAnswer.setBackground(superOppositeSelectedColor);
            resetButton.setVisible(true);
            superCheck = true;
            temp[6] = temp[6] + 1;
        }
        if(loveFlag & aggressionFlag){
            optimismAnswer.setBackground(superSelectedColor);
            disapprovalAnswer.setBackground(superOppositeSelectedColor);
            resetButton.setVisible(true);
            superCheck = true;
            temp[7] = temp[7] + 1;
        }
    }
    
    private void buttonToggler(int indexButton, boolean flag){
        switch(indexButton){
            case 0: //love
                if(flag){
                    disapprovalAnswer.setEnabled(false);
                    remorseAnswer.setEnabled(false);
                    contemptAnswer.setEnabled(false);
                }else{
                    if(submissionFlag){
                        disapprovalAnswer.setEnabled(true);
                    }else if(optimismFlag){
                        contemptAnswer.setEnabled(true);
                    }else{
                        disapprovalAnswer.setEnabled(true);
                        remorseAnswer.setEnabled(true);
                        contemptAnswer.setEnabled(true);
                    }
                }
                break;
                
            case 1: //submission
                if(flag){
                    remorseAnswer.setEnabled(false);
                    contemptAnswer.setEnabled(false);
                    aggressionAnswer.setEnabled(false);
                }else{
                    if(aweFlag){
                        remorseAnswer.setEnabled(true);
                    }else if(loveFlag){
                        aggressionAnswer.setEnabled(true);
                    }else{
                        remorseAnswer.setEnabled(true);
                        contemptAnswer.setEnabled(true);
                        aggressionAnswer.setEnabled(true);
                    }
                }
                break;
                
            case 2: //awe
                if(flag){
                    optimismAnswer.setEnabled(false);
                    contemptAnswer.setEnabled(false);
                    aggressionAnswer.setEnabled(false);
                }else{
                    if(disapprovalFlag){
                        contemptAnswer.setEnabled(true);
                    }else if(submissionFlag){
                        optimismAnswer.setEnabled(true);
                    }else{
                        contemptAnswer.setEnabled(true);
                        aggressionAnswer.setEnabled(true);
                        optimismAnswer.setEnabled(true);
                    }
                }
                break;
                
            case 3: //disapproval
                if(flag){
                    optimismAnswer.setEnabled(false);
                    loveAnswer.setEnabled(false);
                    aggressionAnswer.setEnabled(false);
                }else{
                    if(remorseFlag){
                        aggressionAnswer.setEnabled(true);
                    }else if(aweFlag){
                        loveAnswer.setEnabled(true);
                    }else{
                        loveAnswer.setEnabled(true);
                        aggressionAnswer.setEnabled(true);
                        optimismAnswer.setEnabled(true);
                    }
                }
                break;
                
            case 4: //remorse
                if(flag){
                    optimismAnswer.setEnabled(false);
                    loveAnswer.setEnabled(false);
                    submissionAnswer.setEnabled(false);
                }else{
                    if(contemptFlag){
                        optimismAnswer.setEnabled(true);
                    }else if(disapprovalFlag){
                        submissionAnswer.setEnabled(true);
                    }else{
                        loveAnswer.setEnabled(true);
                        submissionAnswer.setEnabled(true);
                        optimismAnswer.setEnabled(true);
                    }
                }
                break;
                
            case 5: //contempt
                if(flag){
                    loveAnswer.setEnabled(false);
                    submissionAnswer.setEnabled(false);
                    aweAnswer.setEnabled(false);
                }else{
                    if(aggressionFlag){
                        loveAnswer.setEnabled(true);
                    }else if(remorseFlag){
                        aweAnswer.setEnabled(true);
                    }else{
                        aweAnswer.setEnabled(true);
                        loveAnswer.setEnabled(true);
                        submissionAnswer.setEnabled(true);
                    }
                }
                break;
                
            case 6: //aggression
                if(flag){
                    submissionAnswer.setEnabled(false);
                    aweAnswer.setEnabled(false);
                    disapprovalAnswer.setEnabled(false);
                }else{
                    if(optimismFlag){
                        submissionAnswer.setEnabled(true);
                    }else if(contemptFlag){
                        disapprovalAnswer.setEnabled(true);
                    }else{
                        aweAnswer.setEnabled(true);
                        disapprovalAnswer.setEnabled(true);
                        submissionAnswer.setEnabled(true);
                    }
                }
                break;
                
            case 7: //optimism
                if(flag){
                    remorseAnswer.setEnabled(false);
                    aweAnswer.setEnabled(false);
                    disapprovalAnswer.setEnabled(false);
                }else{
                    if(loveFlag){
                        aweAnswer.setEnabled(true);
                    }else if(aggressionFlag){
                        remorseAnswer.setEnabled(true);
                    }else{
                        aweAnswer.setEnabled(true);
                        disapprovalAnswer.setEnabled(true);
                        remorseAnswer.setEnabled(true);
                    }
                }
                break;
        }
    }
    
    private void resetQuiz(){
        Middle.setVisible(true);
        End.setVisible(false);
        resetButton.setVisible(false);
        superCheck = false;
        
        for(int i=0;i<8;i++){
                    temp[i] = 0;
            }
        
        loveAnswer.setBackground(nonSelectedColor);
        submissionAnswer.setBackground(nonSelectedColor);
        aweAnswer.setBackground(nonSelectedColor);
        disapprovalAnswer.setBackground(nonSelectedColor);
        remorseAnswer.setBackground(nonSelectedColor);
        contemptAnswer.setBackground(nonSelectedColor);
        aggressionAnswer.setBackground(nonSelectedColor);
        optimismAnswer.setBackground(nonSelectedColor);
        
        aweAnswer.setEnabled(true);
        disapprovalAnswer.setEnabled(true);
        remorseAnswer.setEnabled(true);
        contemptAnswer.setEnabled(true);
        aggressionAnswer.setEnabled(true);
        loveAnswer.setEnabled(true);
        submissionAnswer.setEnabled(true);
        optimismAnswer.setEnabled(true);
        
        loveFlag = false;
        submissionFlag = false;
        aweFlag = false; 
        disapprovalFlag = false;
        remorseFlag = false;
        contemptFlag = false;
        aggressionFlag = false; 
        optimismFlag = false;
        
        creditScore = 3;
    }
    
    private void updateQuiz(){
        resetQuiz();
        int index = currentPage - 1;
        problem = quiz.getProblem(index);
        answers = quiz.getQuizAnswers(index);//Indexes are inverted
        pageNumber.setText("Page : " + currentPage + "/" + quiz.getQuizSize());
        problemString.setText(problem);
        loveAnswer.setText(answers.get(0));
        submissionAnswer.setText(answers.get(1));
        aweAnswer.setText(answers.get(2));
        disapprovalAnswer.setText(answers.get(3));
        remorseAnswer.setText(answers.get(4));
        contemptAnswer.setText(answers.get(5));
        aggressionAnswer.setText(answers.get(6));
        optimismAnswer.setText(answers.get(7));
    }
      
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrontEnd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrontEnd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrontEnd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrontEnd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrontEnd().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Bottom;
    private javax.swing.JPanel End;
    private javax.swing.JPanel Middle;
    private javax.swing.JPanel Top;
    private javax.swing.JButton aggressionAnswer;
    private javax.swing.JButton aweAnswer;
    private javax.swing.JButton contemptAnswer;
    private javax.swing.JButton disapprovalAnswer;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JButton loveAnswer;
    private javax.swing.JButton nextButton;
    private javax.swing.JButton optimismAnswer;
    private javax.swing.JLabel pageNumber;
    private javax.swing.JLabel problemString;
    private javax.swing.JButton remorseAnswer;
    private javax.swing.JButton resetButton;
    private javax.swing.JLabel results;
    private javax.swing.JLabel results1;
    private javax.swing.JLabel results2;
    private javax.swing.JButton submissionAnswer;
    // End of variables declaration//GEN-END:variables
}
